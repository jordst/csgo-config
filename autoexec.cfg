// Launch: -high +cl_forcepreload 1 -forcenovsync -novid -tickrate 128 -nojoy +fps_max 0 -fullscreen -noubershader -w 1280 -h 960 +exec autoexec.cfg 

//Weapon viewmodel script for Launders. Based on a TF2 script by /u/genemilder
//(http://pastebin.com/7beau8BP). Modified for csgo by /u/Flapadiddle
//(http://steamcommunity.com/id/flapadiddle) 2014/12/29

//This script allows one to create individual settings for each inventory slot
//while preserving quickswitching functionality. There is also the option to
//use mouse scrolling if desired. Slot4 is excluded because the grenade cycle
//functionality is not compatiable with this logic.  

//Place this in your autoexec after verifiying that it works. You may have to
//remove existing binds to the keys that you use here to avoid complications.  
 
// ========== BINDS ==========
   //Bind whatever keys you like. next/previous inventory binds are commented
   //by default, uncomment and add keys to enable.   
 
bind    1      eq_slot1    //primary                       
bind    2      eq_slot2    //secondary                     
bind    3      eq_slot3    //melee                         
bind    5      eq_slot5    //bomb                          
bind    c      eq_slot6    //HE                  grenade   
bind    z      eq_slot7    //flash                         
bind    x      eq_slot8    //smoke                         
bind    6      eq_slot9    //decoy                         
bind    v      eq_slot10   //molotov/incendiary            
bind    q      eq_lastinv  //quickswitch                   
//bind  [key]  eq_invnext  //select              next      weapon
//bind  [key]  eq_invprev  //select              previous  weapon
 
 
// ========== SETTINGS ==========
  //insert any settings you wish to add for individual slots (xhair, viewmodel,
  //sensitivity etc.) with a semicolon and the command. the example below puts
  //only the knife in your left hand. 
 
alias eq_slot1    "slot1; set_slot1; cl_righthand 1"
alias eq_slot2    "slot2; set_slot2; cl_righthand 1"
alias eq_slot3    "slot3; set_slot3; cl_righthand 0"
alias eq_slot5    "slot5; set_slot5; cl_righthand 1"
alias eq_slot6    "slot6; set_slot6; cl_righthand 1"
alias eq_slot7    "slot7; set_slot7; cl_righthand 1"
alias eq_slot8    "slot8; set_slot8; cl_righthand 1" 
alias eq_slot9    "slot9; set_slot9; cl_righthand 1"
alias eq_slot10   "slot10; set_slot10; cl_righthand 1"
 

// ========== LOGIC ==========
  //No touching. Basically this manually implements quiswitching without the
  //'lastinv' command and next/previous inventory selection
 
alias qs_slot1    "alias eq_invnext eq_slot2; alias eq_invprev eq_slot10; set_lastinv; alias set_lastinv alias eq_lastinv eq_slot1; alias set_slot1 ; alias set_slot2 qs_slot2; alias set_slot3 qs_slot3; alias set_slot5 qs_slot5; alias set_slot6 qs_slot6; alias set_slot7 qs_slot7; alias set_slot8 qs_slot8; alias set_slot9 qs_slot9; alias set_slot10 qs_slot10"
alias qs_slot2    "alias eq_invnext eq_slot3; alias eq_invprev eq_slot1; set_lastinv; alias set_lastinv alias eq_lastinv eq_slot2; alias set_slot1 qs_slot1; alias set_slot2 ; alias set_slot3 qs_slot3; alias set_slot5 qs_slot5; alias set_slot6 qs_slot6; alias set_slot7 qs_slot7; alias set_slot8 qs_slot8; alias set_slot9 qs_slot9; alias set_slot10 qs_slot10"
alias qs_slot3    "alias eq_invnext eq_slot5; alias eq_invprev eq_slot2; set_lastinv; alias set_lastinv alias eq_lastinv eq_slot3; alias set_slot1 qs_slot1; alias set_slot2 qs_slot2; alias set_slot3 ; alias set_slot5 qs_slot5; alias set_slot6 qs_slot6; alias set_slot7 qs_slot7; alias set_slot8 qs_slot8; alias set_slot9 qs_slot9; alias set_slot10 qs_slot10"
alias qs_slot5    "alias eq_invnext eq_slot6; alias eq_invprev eq_slot3; set_lastinv; alias set_lastinv alias eq_lastinv eq_slot5; alias set_slot1 qs_slot1; alias set_slot2 qs_slot2; alias set_slot3 qs_slot3; alias set_slot5 ; alias set_slot6 qs_slot6; alias set_slot7 qs_slot7; alias set_slot8 qs_slot8; alias set_slot9 qs_slot9; alias set_slot10 qs_slot10"
alias qs_slot6    "alias eq_invnext eq_slot7; alias eq_invprev eq_slot5; set_lastinv; alias set_lastinv alias eq_lastinv eq_slot6; alias set_slot1 qs_slot1; alias set_slot2 qs_slot2; alias set_slot3 qs_slot3; alias set_slot5 qs_slot5; alias set_slot6 ; alias set_slot7 qs_slot7; alias set_slot8 qs_slot8; alias set_slot9 qs_slot9; alias set_slot10 qs_slot10"
alias qs_slot7    "alias eq_invnext eq_slot8; alias eq_invprev eq_slot6; set_lastinv; alias set_lastinv alias eq_lastinv eq_slot7; alias set_slot1 qs_slot1; alias set_slot2 qs_slot2; alias set_slot3 qs_slot3; alias set_slot5 qs_slot5; alias set_slot6 qs_slot6; alias set_slot7 ; alias set_slot8 qs_slot8; alias set_slot9 qs_slot9; alias set_slot10 qs_slot10"  
alias qs_slot8    "alias eq_invnext eq_slot9; alias eq_invprev eq_slot7; set_lastinv; alias set_lastinv alias eq_lastinv eq_slot8; alias set_slot1 qs_slot1; alias set_slot2 qs_slot2; alias set_slot3 qs_slot3; alias set_slot5 qs_slot5; alias set_slot6 qs_slot6; alias set_slot7 qs_slot7; alias set_slot8 ; alias set_slot9 qs_slot9; alias set_slot10 qs_slot10"
alias qs_slot9    "alias eq_invnext eq_slot10; alias eq_invprev eq_slot8; set_lastinv; alias set_lastinv alias eq_lastinv eq_slot9; alias set_slot1 qs_slot1; alias set_slot2 qs_slot2; alias set_slot3 qs_slot3; alias set_slot5 qs_slot5; alias set_slot6 qs_slot6; alias set_slot7 qs_slot7; alias set_slot8 qs_slot8; alias set_slot9 ; alias set_slot10 qs_slot10"
alias qs_slot10   "alias eq_invnext eq_slot1; alias eq_invprev eq_slot9; set_lastinv; alias set_lastinv alias eq_lastinv eq_slot10; alias set_slot1 qs_slot1; alias set_slot2 qs_slot2; alias set_slot3 qs_slot3; alias set_slot5 qs_slot5; alias set_slot6 qs_slot6; alias set_slot7 qs_slot7; alias set_slot8 qs_slot8; alias set_slot9 qs_slot9; alias set_slot10 "
 
qs_slot2
eq_slot3
 
// ========== SCRIPT OVERWRITE ==========
 //in case you done messed something up, uncomment the beginning of each line. 
 
//bind 1            slot1   //primary
//bind 2            slot2   //secondary
//bind 3            slot3   //melee
//bind 5            slot5   //bomb
//bind 4            slot6   //HE grenade
//bind mouse4       slot7   //flash
//bind mouse5       slot8   //smoke
//bind x            slot9   //decoy
//bind c            slot10  //molotov/incendiary
//bind q            lastinv //quickswitch
//bind [key]        invnext //select next weapon
//bind [key]        invprev //select previous weapon


// crosshiar
cl_crosshairthickness 1
cl_crosshairscale 2
cl_crosshairsize 2
cl_crosshairstyle 4
cl_crosshairgap -3

// misc
net_graph 1
cl_showpos 1
cl_disablefreezecam 1
sensitivity 1.9
cl_autowepswitch "0"
cl_hud_playercount_showcount "1"
cl_hud_bomb_under_radar "1"
cl_hud_healthammo_style "0"
hud_scaling 1

// damage given
con_filter_text "Damage"
con_filter_text_out "Player:"
con_filter_enable "2"
developer "1"

// viewmodel 
//viewmodel_presetpos 3
cl_bob_lower_amt "5"
cl_bobamt_lat "0.1"
cl_bobamt_vert "0.1"
cl_bobcycle "2"
viewmodel_fov 68
viewmodel_offset_x 2.5
viewmodel_offset_y 2
viewmodel_offset_z -2
viewmodel_recoil 0

// radar
cl_radar_always_centered 0
cl_radar_scale 0.3
cl_hud_radar_scale 1.15
cl_radar_icon_scale_min 1
cl_radar_rotate "1"

// change crosshair colour on movement
bind w "+forward; cl_crosshaircolor 4;"
bind a "+moveleft; cl_crosshaircolor 2;"
bind d "+moveright; cl_crosshaircolor 3;"
bind s "+back; cl_crosshaircolor 1;"

// movement
bind capslock +duck
bind shift +speed
bind mwheeldown +jump
bind space +voicerecord
